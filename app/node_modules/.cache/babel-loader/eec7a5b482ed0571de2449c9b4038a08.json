{"ast":null,"code":"// import ReactDOM from \"react-dom\";\nimport{COUNTRIES}from\"./countries\";import{Logger}from\"./logger\";import{popup}from\"./share\";import{COUNTRY_NUM}from\"./countrygen\";import{jsx as _jsx}from\"react/jsx-runtime\";var done=false;var cGuessed=[];var dGuessed=[];var aGuessed=[];function rad(d){return d*Math.PI/180;}function deg(d){return d*180/Math.PI;}// START STACKOVERFLOW PART :) \nfunction distance(lat1,lon1,lat2,lon2){var dLat=rad(lat2-lat1);var dLon=rad(lon2-lon1);var a=Math.sin(dLat/2)*Math.sin(dLat/2)+Math.cos(rad(lat1))*Math.cos(rad(lat2))*Math.sin(dLon/2)*Math.sin(dLon/2);return 12742*Math.atan2(Math.sqrt(a),Math.sqrt(1-a));;}function title(s){return s.replace(/\\w\\S*/g,function(t){return t.charAt(0).toUpperCase()+t.substr(1).toLowerCase();});}function angle(lat1,lon1,lat2,lon2){//borrowed from geolib, slightly modified\nif(lat1===lat2&&lon1===lon2)return\"🎉\";var dLon=rad(lon2-lon1);var dLat=Math.log(Math.tan(rad(lat2)/2+Math.PI/4)/Math.tan(rad(lat1)/2+Math.PI/4));if(Math.abs(dLon)>Math.PI){if(dLon>0){dLon=(Math.PI*2-dLon)*-1;}else{dLon=Math.PI*2+dLon;}}var d=(deg(Math.atan2(dLon,dLat))+360)%360;return['⬆️','↗️','➡️','↘️','⬇️','↙️','⬅️','↖️','⬆️'][Math.round(d/45)];}//END STACKOVERFLOW PART :)\nvar pos=0;function GameOver(){Logger(\"Sorry! We were looking for: \"+COUNTRIES[COUNTRY_NUM].name,\"#ff5e5e\");popup(false);}function send(){if(done)return 0;var el=document.getElementById(\"guess\");if(!el.value||el.value.trim()===\"\")return;el.value=el.value.trim().toUpperCase();if(!COUNTRIES.map(function(x){return x.name.toUpperCase();}).includes(el.value)){Logger(\"This is not a country!\",\"#ebc934\");el.value=\"\";return 0;}var QCountry=COUNTRIES.find(function(x){return x.name.toLowerCase()===el.value.toLowerCase();});var _distance=distance(QCountry.latitude,QCountry.longitude,COUNTRIES[COUNTRY_NUM].latitude,COUNTRIES[COUNTRY_NUM].longitude);var _angle=angle(QCountry.latitude,QCountry.longitude,COUNTRIES[COUNTRY_NUM].latitude,COUNTRIES[COUNTRY_NUM].longitude);dGuessed.push(_distance);cGuessed.push([QCountry.code,QCountry.name]);aGuessed.push(_angle);document.querySelectorAll(\".PHold\")[pos].value=\"\".concat(title(el.value),\" (\").concat(_distance.toFixed(3),\"km) \").concat(_angle);if(COUNTRIES[COUNTRY_NUM].name.toUpperCase().normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g,\"\")===el.value){Logger(\"You guessed correctly! Reload to play again!\",\"#4eef53\");popup(true);el.value=\"\";done=true;el.readOnly=true;return 0;}el.value=\"\";Logger(\" \");if(pos===5)GameOver();pos++;}function keyPressFilter(e){if(e.key===\"Enter\")send();}function GuessButton(){return/*#__PURE__*/_jsx(\"button\",{className:\"btn btn_outline\",onClick:send,children:\"Guess\"});}function GuessInput(){return/*#__PURE__*/_jsx(\"input\",{type:\"text\",list:\"_list\",className:\"Text Guess\",placeholder:\"Input Your Guess\",id:\"guess\",onKeyDown:keyPressFilter});}export{GuessButton,GuessInput,dGuessed,aGuessed,cGuessed};","map":{"version":3,"sources":["/home/komali/Documents/worldleunlimited/app/src/func.tsx"],"names":["COUNTRIES","Logger","popup","COUNTRY_NUM","done","cGuessed","dGuessed","aGuessed","rad","d","Math","PI","deg","distance","lat1","lon1","lat2","lon2","dLat","dLon","a","sin","cos","atan2","sqrt","title","s","replace","t","charAt","toUpperCase","substr","toLowerCase","angle","log","tan","abs","round","pos","GameOver","name","send","el","document","getElementById","value","trim","map","x","includes","QCountry","find","_distance","latitude","longitude","_angle","push","code","querySelectorAll","toFixed","normalize","readOnly","keyPressFilter","e","key","GuessButton","GuessInput"],"mappings":"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","sourcesContent":["// import ReactDOM from \"react-dom\";\nimport {COUNTRIES} from \"./countries\";\nimport {Logger} from \"./logger\";\nimport {popup} from \"./share\";\nimport {COUNTRY_NUM} from \"./countrygen\";\n\nlet done: boolean = false;\nlet cGuessed: string[][] = [];\nlet dGuessed: number[] = [];\nlet aGuessed: string[] = [];\nfunction rad(d: number) {return (d * Math.PI)/180;}\nfunction deg(d: number) {return (d * 180)/Math.PI;}\n// START STACKOVERFLOW PART :) \nfunction distance(lat1: number,lon1: number,lat2: number,lon2: number): number{\n  var dLat = rad(lat2-lat1);\n  var dLon = rad(lon2-lon1); \n  var a = \n    Math.sin(dLat/2) * Math.sin(dLat/2) +\n    Math.cos(rad(lat1)) * Math.cos(rad(lat2)) * \n    Math.sin(dLon/2) * Math.sin(dLon/2)\n  return 12742 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));;\n}\nfunction title(s: string) { return s.replace( /\\w\\S*/g, function(t:string) { return t.charAt(0).toUpperCase() + t.substr(1).toLowerCase(); } ); }\n\nfunction angle(lat1: number, lon1:number,lat2: number, lon2: number): string {\n//borrowed from geolib, slightly modified\n  if(lat1 === lat2 && lon1 === lon2) return \"🎉\"\n    var dLon = rad(lon2 - lon1);\n    var dLat = Math.log(\n        Math.tan(rad(lat2) / 2 + Math.PI / 4) /\n            Math.tan(rad(lat1) / 2 + Math.PI / 4)\n    );\n    if (Math.abs(dLon) > Math.PI) {\n        if (dLon > 0) {\n            dLon = (Math.PI * 2 - dLon) * -1;\n        } else {\n            dLon = Math.PI * 2 + dLon;\n        }\n    }\n      let d = (deg(Math.atan2(dLon, dLat)) + 360) % 360;\n\n  return ['⬆️', '↗️', '➡️', '↘️', '⬇️', '↙️', '⬅️', '↖️', '⬆️'][Math.round(d/45)]\n}\n\n//END STACKOVERFLOW PART :)\nlet pos: number = 0;\nfunction GameOver() {\n  Logger(\"Sorry! We were looking for: \" + COUNTRIES[COUNTRY_NUM].name, \"#ff5e5e\");\n  popup(false);\n}\n\nfunction send() {\n  if(done) return 0;\n  let el = document.getElementById(\"guess\")! as HTMLInputElement;\n  if(!el.value || el.value.trim() === \"\") return\n  el.value = el.value!.trim().toUpperCase();\n  if(!COUNTRIES.map(x=>x.name.toUpperCase()).includes(el.value)) {\n    Logger(\"This is not a country!\", \"#ebc934\");\n    el.value = \"\";\n    return 0;\n  }\n  \n  let QCountry = COUNTRIES.find(x=>x.name.toLowerCase() === el.value.toLowerCase())!;\n  let _distance: number = distance(\n    QCountry.latitude,\n    QCountry.longitude, \n    COUNTRIES[COUNTRY_NUM].latitude,\n    COUNTRIES[COUNTRY_NUM].longitude\n  );\n  let _angle: string = angle(\n    QCountry.latitude,\n    QCountry.longitude, \n    COUNTRIES[COUNTRY_NUM].latitude,\n    COUNTRIES[COUNTRY_NUM].longitude\n  );\n  dGuessed.push(_distance);\n  cGuessed.push([QCountry.code, QCountry.name]);\n  aGuessed.push(_angle);\n  (document.querySelectorAll(\".PHold\")![pos] as HTMLInputElement).value = `${title(el.value)} (${\n    _distance.toFixed(3)\n  }km) ${\n    _angle\n  }`;\n  if(COUNTRIES[COUNTRY_NUM].name.toUpperCase().normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\") === el.value) {\n    Logger(\"You guessed correctly! Reload to play again!\", \"#4eef53\");\n    popup(true);\n    el.value = \"\";\n    done = true;\n    el.readOnly = true;\n    return 0;\n  }\n  el.value = \"\";\n  Logger(\" \");\n  if(pos === 5) GameOver();\n  pos++;\n  \n}\nfunction keyPressFilter(e: {key: string}) {\n  if(e.key === \"Enter\") send()\n}\nfunction GuessButton() {\n  return (\n    <button className=\"btn btn_outline\" onClick={send}>Guess</button>\n  )\n}\nfunction GuessInput() {\n  return (<input type='text' list=\"_list\" className=\"Text Guess\" placeholder=\"Input Your Guess\" id=\"guess\" onKeyDown={keyPressFilter}/>)\n}\nexport {GuessButton, GuessInput, dGuessed, aGuessed, cGuessed}"]},"metadata":{},"sourceType":"module"}